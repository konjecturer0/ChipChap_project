{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\nvar when = require('when');\n\nvar when_fn = require(\"when/function\");\n\nfunction auth(session, user, extra) {\n  // Persona Issues:\n  //\n  // Chrome: https://github.com/mozilla/persona/issues/4083\n  // IE11: https://groups.google.com/forum/#!topic/mozilla.dev.identity/keEkVpvfLA8\n  var d = session.defer();\n  navigator.id.watch({\n    loggedInUser: user,\n    onlogin: function (assertion) {\n      // A user has logged in! Here you need to:\n      // 1. Send the assertion to your backend for verification and to create a session.\n      // 2. Update your UI.\n      d.resolve(assertion);\n    },\n    onlogout: function () {\n      // A user has logged out! Here you need to:\n      // Tear down the user's session by redirecting the user or making a call to your backend.\n      // Also, make sure loggedInUser will get set to null on the next page load.\n      // (That's a literal JavaScript null. Not false, 0, or undefined. null.)\n      session.leave(\"wamp.close.logout\");\n    }\n  });\n\n  if (d.promise.then) {\n    // whenjs has the actual user promise in an attribute\n    return d.promise;\n  } else {\n    return d;\n  }\n}\n\nexports.auth = auth;","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/node_modules/autobahn/lib/auth/persona.js"],"names":["when","require","when_fn","auth","session","user","extra","d","defer","navigator","id","watch","loggedInUser","onlogin","assertion","resolve","onlogout","leave","promise","then","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAArB;;AAGA,SAASE,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AAEjC;AACA;AACA;AACA;AAEA,MAAIC,CAAC,GAAGH,OAAO,CAACI,KAAR,EAAR;AAEAC,EAAAA,SAAS,CAACC,EAAV,CAAaC,KAAb,CAAmB;AAChBC,IAAAA,YAAY,EAAEP,IADE;AAEhBQ,IAAAA,OAAO,EAAE,UAAUC,SAAV,EAAqB;AAC3B;AACA;AACA;AACAP,MAAAA,CAAC,CAACQ,OAAF,CAAUD,SAAV;AACF,KAPe;AAQhBE,IAAAA,QAAQ,EAAE,YAAW;AAClB;AACA;AACA;AACA;AACAZ,MAAAA,OAAO,CAACa,KAAR,CAAc,mBAAd;AACF;AAde,GAAnB;;AAiBA,MAAIV,CAAC,CAACW,OAAF,CAAUC,IAAd,EAAoB;AACjB;AACA,WAAOZ,CAAC,CAACW,OAAT;AACF,GAHD,MAGO;AACJ,WAAOX,CAAP;AACF;AACH;;AAEDa,OAAO,CAACjB,IAAR,GAAeA,IAAf","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\n\nvar when = require('when');\nvar when_fn = require(\"when/function\");\n\n\nfunction auth(session, user, extra) {\n\n   // Persona Issues:\n   //\n   // Chrome: https://github.com/mozilla/persona/issues/4083\n   // IE11: https://groups.google.com/forum/#!topic/mozilla.dev.identity/keEkVpvfLA8\n\n   var d = session.defer();\n\n   navigator.id.watch({\n      loggedInUser: user,\n      onlogin: function (assertion) {\n         // A user has logged in! Here you need to:\n         // 1. Send the assertion to your backend for verification and to create a session.\n         // 2. Update your UI.\n         d.resolve(assertion);\n      },\n      onlogout: function() {\n         // A user has logged out! Here you need to:\n         // Tear down the user's session by redirecting the user or making a call to your backend.\n         // Also, make sure loggedInUser will get set to null on the next page load.\n         // (That's a literal JavaScript null. Not false, 0, or undefined. null.)\n         session.leave(\"wamp.close.logout\");\n      }\n   });\n\n   if (d.promise.then) {\n      // whenjs has the actual user promise in an attribute\n      return d.promise;\n   } else {\n      return d;\n   }\n}\n\nexports.auth = auth;\n"]},"metadata":{},"sourceType":"script"}