{"ast":null,"code":"var _jsxFileName = \"/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/src/components/App.js\";\nimport React from 'react'; // MicroComponents\n\nimport NewChat from '../components/buttons/NewChat';\nimport ChatHead from '../components/ChatsHead'; // Components\n\nimport Contacts from '../components/Contacts';\nimport Chat from '../components/MainChat/Chat'; // Styles\n\nimport Container from '../styles/App/container.tw'; // Autobahn\n\nimport autobahn from 'autobahn';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userSelect: '',\n      users: [],\n      messageStore: [],\n      filterChat: ''\n    };\n\n    this.toggleChat = user => {\n      this.setState({\n        userSelect: user.id\n      });\n\n      const removeUser = id => {\n        const mesasgeStorage = this.state.messageStore;\n        let newMessageStorage = [];\n\n        for (let i = 0; i < mesasgeStorage.length; i++) {\n          if (!messageStore[i][user.id]) {\n            newMessageStorage.push(messageStore[i]);\n          }\n        }\n\n        return newMessageStorage;\n      };\n\n      const msgStorage = removeUser(user.id);\n      this.setState({\n        messageStore: msgStorage\n      });\n    };\n\n    this.selectUserChat = users => {\n      for (let i = 0; i < users.length; i++) {\n        if (users[i].id === this.state.userSelect) {\n          return users[i];\n        }\n      }\n    };\n\n    this.onSearch = e => {\n      let value = e.target.value;\n      this.setState({\n        filterChat: value\n      });\n    };\n\n    this.sess = null;\n  }\n\n  componentDidMount() {\n    let connection = new autobahn.Connection({\n      transports: [{\n        type: \"websocket\",\n        url: 'ws://192.168.2.115:8080'\n      }],\n      realm: 'chat'\n    });\n\n    connection.onopen = (session, details) => {\n      console.log(\"!! Got a connection\");\n      console.log(session);\n      console.log(details);\n      this.sess = session;\n      this.sess.call('com.chipchap.session.user.actions:contacts').then(result => {\n        // console.log(result[0]);\n        this.setState({\n          users: [...result]\n        });\n      }, error => {\n        console.log(\"!!ERROR\");\n        console.log(error);\n      });\n      this.sess.call('com.chipchap.session.user.actions:getmyID').then(result => {\n        this.sess.subscribe(`com.chipchap.session.user.actions:listen:${result}`, this.trackMessageNotify).then(subscription => {\n          console.log(\"subscription to <<listen>> succeded\");\n        }, error => {\n          console.log(\"received error with subscription to <<listen>>\");\n          console.log(error);\n        });\n      }, error => {\n        console.log(\"GOT AN ERROR! WHILE CALLING: GETMYID\");\n      });\n    };\n\n    connection.onclose = function (session, details) {\n      console.log(session, details);\n    };\n\n    connection.open();\n  }\n\n  trackMessageNotify(message, userid) {\n    if (this.state.userSelect !== String(userid)) {\n      this.setState({\n        messageStore: [...{\n          userid: [...message]\n        }]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderColor: '#E6E5EA'\n      },\n      className: \"w-2/6 inline-flex flex-col align-top border-r h-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-6 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NewChat, {\n      onClick: e => alert('For demonstration purposes, you can chat though'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ChatHead, {\n      onSearch: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-2 overflow-y-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Contacts, {\n      filter: this.state.filterChat,\n      users: this.state.users,\n      onToggleChat: this.toggleChat,\n      user: this.state.userSelect,\n      trackNotify: this.state.messageStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-4/6 inline-flex flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Chat, {\n      user: this.selectUserChat(this.state.users),\n      session: this.session,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/src/components/App.js"],"names":["React","NewChat","ChatHead","Contacts","Chat","Container","autobahn","App","Component","constructor","props","state","userSelect","users","messageStore","filterChat","toggleChat","user","setState","id","removeUser","mesasgeStorage","newMessageStorage","i","length","push","msgStorage","selectUserChat","onSearch","e","value","target","sess","componentDidMount","connection","Connection","transports","type","url","realm","onopen","session","details","console","log","call","then","result","error","subscribe","trackMessageNotify","subscription","onclose","open","message","userid","String","render","borderColor","alert"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// MicroComponents\nimport NewChat from '../components/buttons/NewChat';\nimport ChatHead from '../components/ChatsHead';\n\n// Components\nimport Contacts from '../components/Contacts';\nimport Chat from '../components/MainChat/Chat';\n\n// Styles\nimport Container from '../styles/App/container.tw';\n\n// Autobahn\nimport autobahn from 'autobahn';\n\nclass App extends React.Component {\n    \n    state = {\n        userSelect: '',\n        users: [],\n        messageStore: [],\n        filterChat: '',\n    };\n\n    constructor(props) {\n        super(props);\n        this.sess = null;\n    }\n\n    componentDidMount() {\n        let connection = new autobahn.Connection({transports:[{type:\"websocket\", url: 'ws://192.168.2.115:8080'}], realm: 'chat'});\n        connection.onopen = (session, details) => {\n            console.log(\"!! Got a connection\");\n            console.log(session);\n            console.log(details);\n            this.sess = session;\n            this.sess.call('com.chipchap.session.user.actions:contacts').then(\n                (result) => {\n                    // console.log(result[0]);\n                    this.setState({users: [ ...result]});\n                },\n                (error) => {\n                    console.log(\"!!ERROR\");\n                    console.log(error);\n                }\n            );\n            this.sess.call('com.chipchap.session.user.actions:getmyID').then(\n                (result) => {\n                    this.sess.subscribe(`com.chipchap.session.user.actions:listen:${result}`, this.trackMessageNotify).then(\n                        (subscription) => {\n                            console.log(\"subscription to <<listen>> succeded\");\n                        },\n                        (error) => {\n                            console.log(\"received error with subscription to <<listen>>\")\n                            console.log(error);\n                        }\n                    );\n                },\n                (error) => {\n                    console.log(\"GOT AN ERROR! WHILE CALLING: GETMYID\");\n                }\n            );\n        }\n        connection.onclose = function(session, details) {\n            console.log(session, details);\n        }\n        connection.open();\n    }\n\n    toggleChat = (user) => {\n        this.setState({userSelect: user.id});\n        const removeUser = (id) => {\n            const mesasgeStorage = this.state.messageStore;\n            let newMessageStorage = [];\n            for (let i=0; i < mesasgeStorage.length; i++) {\n                if (!messageStore[i][user.id]) {\n                    newMessageStorage.push(messageStore[i]);\n                }\n            }\n            return newMessageStorage;\n        }\n        const msgStorage = removeUser(user.id);\n        this.setState({messageStore: msgStorage});\n    }\n\n    trackMessageNotify(message, userid) {\n        if (this.state.userSelect !== String(userid)) {\n            this.setState({messageStore: [...{userid: [...message]}]});\n        }\n    }\n\n    selectUserChat = (users) => {\n        for (let i=0; i < users.length; i++) {\n            if (users[i].id === this.state.userSelect) {\n                return users[i];\n            }\n        }\n    }\n\n    onSearch = (e) => {\n        let value = e.target.value;\n        this.setState({filterChat: value});\n    }\n\n    render() {\n        return (\n            <Container>\n                <div style={{borderColor: '#E6E5EA'}} className=\"w-2/6 inline-flex flex-col align-top border-r h-screen\">\n                    {/******** BUTTON NEW CONVERSATION *****/}\n                    <div className=\"py-6 text-center\">\n                        <NewChat onClick={(e) => alert('For demonstration purposes, you can chat though')} />\n                    </div>\n                    {/******** CHATS & SEARCH *****/}\n                    <div className=\"py-2\">\n                        <ChatHead onSearch={this.onSearch} />\n                    </div>\n                    {/******** CONTACTS SECTION *****/}\n                    <div className=\"py-2 overflow-y-scroll\">\n                        <Contacts filter={this.state.filterChat} users={this.state.users} onToggleChat={this.toggleChat} user={this.state.userSelect} trackNotify={this.state.messageStore} />\n                    </div>\n                </div>\n                <div className=\"w-4/6 inline-flex flex-col\">\n                    {/*****  CHAT  *****/}\n                    <Chat user={this.selectUserChat(this.state.users)} session={this.session} />\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}