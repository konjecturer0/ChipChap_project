{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/** @author Brian Cavalier */\n\n/** @author John Hann */\n(function (define) {\n  'use strict';\n\n  define(function () {\n    return function liftAll(liftOne, combine, dst, src) {\n      if (typeof combine === 'undefined') {\n        combine = defaultCombine;\n      }\n\n      return Object.keys(src).reduce(function (dst, key) {\n        var f = src[key];\n        return typeof f === 'function' ? combine(dst, liftOne(f), key) : dst;\n      }, typeof dst === 'undefined' ? defaultDst(src) : dst);\n    };\n\n    function defaultCombine(o, f, k) {\n      o[k] = f;\n      return o;\n    }\n\n    function defaultDst(src) {\n      return typeof src === 'function' ? src.bind() : Object.create(src);\n    }\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory();\n});","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/node_modules/when/lib/liftAll.js"],"names":["define","liftAll","liftOne","combine","dst","src","defaultCombine","Object","keys","reduce","key","f","defaultDst","o","k","bind","create","amd","factory","module","exports"],"mappings":"AAAA;;AACA;;AACA;AAEC,WAASA,MAAT,EAAiB;AAAE;;AACpBA,EAAAA,MAAM,CAAC,YAAW;AAEjB,WAAO,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,GAAnC,EAAwCC,GAAxC,EAA6C;AACnD,UAAG,OAAOF,OAAP,KAAmB,WAAtB,EAAmC;AAClCA,QAAAA,OAAO,GAAGG,cAAV;AACA;;AAED,aAAOC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,MAAjB,CAAwB,UAASL,GAAT,EAAcM,GAAd,EAAmB;AACjD,YAAIC,CAAC,GAAGN,GAAG,CAACK,GAAD,CAAX;AACA,eAAO,OAAOC,CAAP,KAAa,UAAb,GAA0BR,OAAO,CAACC,GAAD,EAAMF,OAAO,CAACS,CAAD,CAAb,EAAkBD,GAAlB,CAAjC,GAA0DN,GAAjE;AACA,OAHM,EAGJ,OAAOA,GAAP,KAAe,WAAf,GAA6BQ,UAAU,CAACP,GAAD,CAAvC,GAA+CD,GAH3C,CAAP;AAIA,KATD;;AAWA,aAASE,cAAT,CAAwBO,CAAxB,EAA2BF,CAA3B,EAA8BG,CAA9B,EAAiC;AAChCD,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAP;AACA,aAAOE,CAAP;AACA;;AAED,aAASD,UAAT,CAAoBP,GAApB,EAAyB;AACxB,aAAO,OAAOA,GAAP,KAAe,UAAf,GAA4BA,GAAG,CAACU,IAAJ,EAA5B,GAAyCR,MAAM,CAACS,MAAP,CAAcX,GAAd,CAAhD;AACA;AACD,GArBK,CAAN;AAsBC,CAvBA,EAuBC,OAAOL,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACiB,GAAvC,GAA6CjB,MAA7C,GAAsD,UAASkB,OAAT,EAAkB;AAAEC,EAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,EAAxB;AAA6B,CAvBxG,CAAD","sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function liftAll(liftOne, combine, dst, src) {\n\t\tif(typeof combine === 'undefined') {\n\t\t\tcombine = defaultCombine;\n\t\t}\n\n\t\treturn Object.keys(src).reduce(function(dst, key) {\n\t\t\tvar f = src[key];\n\t\t\treturn typeof f === 'function' ? combine(dst, liftOne(f), key) : dst;\n\t\t}, typeof dst === 'undefined' ? defaultDst(src) : dst);\n\t};\n\n\tfunction defaultCombine(o, f, k) {\n\t\to[k] = f;\n\t\treturn o;\n\t}\n\n\tfunction defaultDst(src) {\n\t\treturn typeof src === 'function' ? src.bind() : Object.create(src);\n\t}\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n"]},"metadata":{},"sourceType":"script"}