{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\nvar log = require('./log.js');\n\nvar when = require('when'); /// Convert base64 string to array of bytes.\n\n\nfunction _atob(s) {\n  if (s) {\n    return new Uint8Array(atob(s).split(\"\").map(function (c) {\n      return c.charCodeAt(0);\n    }));\n  } else {\n    return null;\n  }\n}\n\nexports.atob = _atob; /// Convert array of bytes to base64 string.\n\nfunction _btoa(b) {\n  if (b) {\n    return btoa(String.fromCharCode.apply(null, b));\n  } else {\n    return null;\n  }\n}\n\nexports.btoa = _btoa; /// Convert array of bytes to hex string.\n\nfunction _btoh(bytes) {\n  if (bytes) {\n    var res = '';\n\n    for (var i = 0; i < bytes.length; ++i) {\n      res += ('0' + (bytes[i] & 0xFF).toString(16)).slice(-2);\n    }\n\n    return res;\n  } else {\n    return null;\n  }\n}\n\nexports.btoh = _btoh; /// Convert hex string to array of bytes.\n\nfunction _htob(hex) {\n  if (hex) {\n    if (typeof hex !== 'string') {\n      throw new TypeError('Expected input to be a string');\n    }\n\n    if (hex.length % 2 !== 0) {\n      throw new RangeError('Expected string to be an even number of characters');\n    }\n\n    var view = new Uint8Array(hex.length / 2);\n\n    for (var i = 0; i < hex.length; i += 2) {\n      view[i / 2] = parseInt(hex.substring(i, i + 2), 16);\n    }\n\n    return view;\n  } else {\n    return null;\n  }\n}\n\nexports.htob = _htob;\n\nvar rand_normal = function (mean, sd) {\n  // Derive a Gaussian from Uniform random variables\n  // http://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n  var x1, x2, rad;\n\n  do {\n    x1 = 2 * Math.random() - 1;\n    x2 = 2 * Math.random() - 1;\n    rad = x1 * x1 + x2 * x2;\n  } while (rad >= 1 || rad == 0);\n\n  var c = Math.sqrt(-2 * Math.log(rad) / rad);\n  return (mean || 0) + x1 * c * (sd || 1);\n};\n\nvar is_object = function (variable) {\n  return !Array.isArray(variable) && (variable instanceof Object || typeof variable === 'object');\n};\n\nvar assert = function (cond, text) {\n  if (cond) {\n    return;\n  }\n\n  if (assert.useDebugger || 'AUTOBAHN_DEBUG' in global && AUTOBAHN_DEBUG) {\n    debugger;\n  }\n\n  throw new Error(text || \"Assertion failed!\");\n}; // Helper to do HTTP/POST requests returning deferreds. This function is\n// supposed to work on IE8, IE9 and old Android WebKit browsers. We don't care\n// if it works with other browsers.\n//\n\n\nvar http_post = function (url, data, timeout) {\n  log.debug(\"new http_post request\", url, data, timeout);\n  var d = when.defer();\n  var req = new XMLHttpRequest();\n  req.withCredentials = true; // pass along cookies\n\n  req.onreadystatechange = function () {\n    if (req.readyState === 4) {\n      // Normalize IE's response to HTTP 204 when Win error 1223.\n      // http://stackoverflow.com/a/10047236/884770\n      //\n      var status = req.status === 1223 ? 204 : req.status;\n\n      if (status === 200) {\n        // response with content\n        //\n        d.resolve(req.responseText);\n      }\n\n      if (status === 204) {\n        // empty response\n        //\n        d.resolve();\n      } else {\n        // anything else is a fail\n        //\n        var statusText = null;\n\n        try {\n          statusText = req.statusText;\n        } catch (e) {// IE8 fucks up on this\n        }\n\n        d.reject({\n          code: status,\n          text: statusText\n        });\n      }\n    }\n  };\n\n  req.open(\"POST\", url, true);\n  req.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\n  if (timeout > 0) {\n    req.timeout = timeout; // request timeout in ms\n\n    req.ontimeout = function () {\n      d.reject({\n        code: 501,\n        text: \"request timeout\"\n      });\n    };\n  }\n\n  if (data) {\n    req.send(data);\n  } else {\n    req.send();\n  }\n\n  if (d.promise.then) {\n    // whenjs has the actual user promise in an attribute\n    return d.promise;\n  } else {\n    return d;\n  }\n}; // Helper to do HTTP/GET requests returning JSON parsed result as a promise.\n\n\nvar http_get_json = function (url, timeout) {\n  var d = when.defer();\n  var req = new XMLHttpRequest();\n  req.withCredentials = true; // pass along cookies\n\n  req.onreadystatechange = function () {\n    if (req.readyState === 4) {\n      // Normalize IE's response to HTTP 204 when Win error 1223.\n      // http://stackoverflow.com/a/10047236/884770\n      //\n      var status = req.status === 1223 ? 204 : req.status;\n\n      if (status === 200) {\n        // parse response\n        var data = JSON.parse(req.responseText); // response with content\n        //\n\n        d.resolve(data);\n      }\n\n      if (status === 204) {\n        // empty response\n        //\n        d.resolve();\n      } else {\n        // anything else is a fail\n        //\n        var statusText = null;\n\n        try {\n          statusText = req.statusText;\n        } catch (e) {// IE8 fucks up on this\n        }\n\n        d.reject({\n          code: status,\n          text: statusText\n        });\n      }\n    }\n  };\n\n  req.open(\"GET\", url, true);\n  req.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\n  if (timeout > 0) {\n    req.timeout = timeout; // request timeout in ms\n\n    req.ontimeout = function () {\n      d.reject({\n        code: 501,\n        text: \"request timeout\"\n      });\n    };\n  }\n\n  req.send();\n\n  if (d.promise.then) {\n    // whenjs has the actual user promise in an attribute\n    return d.promise;\n  } else {\n    return d;\n  }\n};\n/**\n * Merge a list of objects from left to right\n *\n * For each object passed to the function, add to the previous object the keys\n *     that are present in the former but not the latter. If the last argument\n *     is a boolean, it sets whether or not to recursively merge objects.\n *\n * This function mutates the first passed object. To avopid this, you can pass\n *     a new empty object as the first arg:\n *\n *     defaults({}, obj1, obj2, ...)\n *\n * @example\n *     defaults({ a: 1 }, { a: 2, b: 2 }, { b: 3, c: 3 })\n *     // { a: 1, b: 2, c: 3 }\n *\n *     defaults({ a: { k1: 1 } }, { a: { k2: 2 } })\n *     // { a: { k1: 1 } }\n *\n *     defaults({ a: { k1: 1 } }, { a: { k2: 2 } })\n *     // { a: { k1: 1 } }\n *\n * @param {Object} base The object to merge defaults to\n * @param {Object} source[, ...] The default values source\n * @param {Boolean} [recursive] Whether to recurse fro object values*\n *     (default: false)\n * @returns {Object} The mutated `base` object\n */\n\n\nvar defaults = function () {\n  // Return an empty object if no arguments are passed\n  if (arguments.length === 0) return {};\n  var base = arguments[0];\n  var recursive = false;\n  var len = arguments.length; // Check for recursive mode param\n\n  if (typeof arguments[len - 1] === 'boolean') {\n    recursive = arguments[len - 1];\n    len -= 1; // Ignore the last arg\n  } // Merging function used by Array#forEach()\n\n\n  var do_merge = function (key) {\n    var val = obj[key]; // Set if unset\n\n    if (!(key in base)) {\n      base[key] = val; // If the value is an object and we use recursive mode, use defaults on\n      // the value\n    } else if (recursive && typeof val === 'object' && typeof base[key] === 'object') {\n      defaults(base[key], val);\n    } // Otherwise ignore the value\n\n  }; // Iterate over source objects\n\n\n  for (var i = 1; i < len; i++) {\n    var obj = arguments[i]; // Ignore falsy values\n\n    if (!obj) continue; // Require object\n\n    if (typeof obj !== 'object') {\n      throw new Error('Expected argument at index ' + i + ' to be an object');\n    } // Merge keys\n\n\n    Object.keys(obj).forEach(do_merge);\n  } // Return the mutated base object\n\n\n  return base;\n};\n/**\n * If an error handler function is given, it is called with the error instance, otherwise log the error to the console\n * with a possible custom error message prefix. The custom message is passed also the error handler.\n *\n * @param {function} handler - The error handler function.\n * @param {object | Error} error - The error instance.\n * @param {string} [error_message] - The custom error message, optional.\n */\n\n\nvar handle_error = function (handler, error, error_message) {\n  if (typeof handler === 'function') {\n    handler(error, error_message);\n  } else {\n    console.error(error_message || 'Unhandled exception raised: ', error);\n  }\n};\n/**\n * Generate a new ID to identify a WAMP global scope entity, such as a session or a publication.\n * Represented as a JavaScript Number (double float), so ensure that an appropriate serialization\n * for an integer is used for use in transported WAMP protocol messages.\n */\n\n\nvar new_global_id = function () {\n  return Math.floor(Math.random() * 9007199254740992) + 1;\n};\n\nvar deferred_factory = function (options) {\n  var defer = null;\n\n  if (options && options.use_es6_promises) {\n    if ('Promise' in global) {\n      // ES6-based deferred factory\n      //\n      defer = function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n          deferred.resolve = resolve;\n          deferred.reject = reject;\n        });\n        return deferred;\n      };\n    } else {\n      log.debug(\"Warning: ES6 promises requested, but not found! Falling back to whenjs.\"); // whenjs-based deferred factory\n      //\n\n      defer = when.defer;\n    }\n  } else if (options && options.use_deferred) {\n    // use explicit deferred factory, e.g. jQuery.Deferred or Q.defer\n    //\n    defer = options.use_deferred;\n  } else {\n    // whenjs-based deferred factory\n    //\n    defer = when.defer;\n  }\n\n  return defer;\n};\n\nvar promise = function (d) {\n  if (d.promise.then) {\n    // whenjs has the actual user promise in an attribute\n    return d.promise;\n  } else {\n    return d;\n  }\n};\n\nlet sleep = async function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nlet _read_file = async function read_file(path) {\n  let fs = require(\"fs\");\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n};\n\nif ('fs' in global) {\n  exports.read_file = _read_file;\n} else {\n  exports.read_file = null;\n}\n\nexports.handle_error = handle_error;\nexports.rand_normal = rand_normal;\nexports.is_object = is_object;\nexports.assert = assert;\nexports.http_post = http_post;\nexports.http_get_json = http_get_json;\nexports.defaults = defaults;\nexports.new_global_id = new_global_id;\nexports.deferred_factory = deferred_factory;\nexports.promise = promise;\nexports.sleep = sleep;","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/node_modules/autobahn/lib/util.js"],"names":["log","require","when","_atob","s","Uint8Array","atob","split","map","c","charCodeAt","exports","_btoa","b","btoa","String","fromCharCode","apply","_btoh","bytes","res","i","length","toString","slice","btoh","_htob","hex","TypeError","RangeError","view","parseInt","substring","htob","rand_normal","mean","sd","x1","x2","rad","Math","random","sqrt","is_object","variable","Array","isArray","Object","assert","cond","text","useDebugger","global","AUTOBAHN_DEBUG","Error","http_post","url","data","timeout","debug","d","defer","req","XMLHttpRequest","withCredentials","onreadystatechange","readyState","status","resolve","responseText","statusText","e","reject","code","open","setRequestHeader","ontimeout","send","promise","then","http_get_json","JSON","parse","defaults","arguments","base","recursive","len","do_merge","key","val","obj","keys","forEach","handle_error","handler","error","error_message","console","new_global_id","floor","deferred_factory","options","use_es6_promises","deferred","Promise","use_deferred","sleep","ms","setTimeout","_read_file","read_file","path","fs","readFile","err"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\n\nvar log = require('./log.js');\n\nvar when = require('when');\n\n\n/// Convert base64 string to array of bytes.\nfunction _atob (s) {\n   if (s) {\n      return new Uint8Array(atob(s).split(\"\").map(function(c) { return c.charCodeAt(0); }));\n   } else {\n      return null;\n   }\n}\n\nexports.atob = _atob\n\n\n/// Convert array of bytes to base64 string.\nfunction _btoa (b) {\n   if (b) {\n      return  btoa(String.fromCharCode.apply(null, b));\n   } else {\n      return null;\n   }\n}\n\nexports.btoa = _btoa\n\n\n/// Convert array of bytes to hex string.\nfunction _btoh (bytes) {\n   if (bytes) {\n      var res = '';\n      for (var i = 0; i < bytes.length; ++i) {\n         res += ('0' + (bytes[i] & 0xFF).toString(16)).slice(-2);\n      }\n      return res;\n   } else {\n      return null;\n   }\n}\n\nexports.btoh = _btoh\n\n\n/// Convert hex string to array of bytes.\nfunction _htob (hex) {\n   if (hex) {\n      if (typeof hex !== 'string') {\n         throw new TypeError('Expected input to be a string')\n      }\n\n      if ((hex.length % 2) !== 0) {\n         throw new RangeError('Expected string to be an even number of characters')\n      }\n\n      var view = new Uint8Array(hex.length / 2)\n\n      for (var i = 0; i < hex.length; i += 2) {\n         view[i / 2] = parseInt(hex.substring(i, i + 2), 16)\n      }\n\n      return view\n   } else {\n      return null;\n   }\n}\n\nexports.htob = _htob\n\n\nvar rand_normal = function (mean, sd) {\n   // Derive a Gaussian from Uniform random variables\n   // http://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n   var x1, x2, rad;\n\n   do {\n      x1 = 2 * Math.random() - 1;\n      x2 = 2 * Math.random() - 1;\n      rad = x1 * x1 + x2 * x2;\n   } while (rad >= 1 || rad == 0);\n\n   var c = Math.sqrt(-2 * Math.log(rad) / rad);\n\n   return (mean || 0) + (x1 * c) * (sd || 1);\n};\n\n\n\nvar is_object = function(variable) {\n   return !Array.isArray(variable) && (variable instanceof Object || typeof variable === 'object')\n};\n\n\n\nvar assert = function (cond, text) {\n\tif (cond) {\n      return;\n   }\n\tif (assert.useDebugger || ('AUTOBAHN_DEBUG' in global && AUTOBAHN_DEBUG)) {\n      debugger;\n   }\n\n\tthrow new Error(text || \"Assertion failed!\");\n};\n\n\n\n// Helper to do HTTP/POST requests returning deferreds. This function is\n// supposed to work on IE8, IE9 and old Android WebKit browsers. We don't care\n// if it works with other browsers.\n//\nvar http_post = function (url, data, timeout) {\n\n   log.debug(\"new http_post request\", url, data, timeout);\n\n   var d = when.defer();\n   var req = new XMLHttpRequest();\n   req.withCredentials = true; // pass along cookies\n   req.onreadystatechange = function () {\n\n      if (req.readyState === 4) {\n\n         // Normalize IE's response to HTTP 204 when Win error 1223.\n         // http://stackoverflow.com/a/10047236/884770\n         //\n         var status = (req.status === 1223) ? 204 : req.status;\n\n         if (status === 200) {\n\n            // response with content\n            //\n            d.resolve(req.responseText);\n\n         } if (status === 204) {\n\n            // empty response\n            //\n            d.resolve();\n\n         } else {\n\n            // anything else is a fail\n            //\n            var statusText = null;\n            try {\n               statusText = req.statusText;\n            } catch (e) {\n               // IE8 fucks up on this\n            }\n            d.reject({code: status, text: statusText});\n         }\n      }\n   }\n\n   req.open(\"POST\", url, true);\n   req.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\n   if (timeout > 0) {\n      req.timeout = timeout; // request timeout in ms\n\n      req.ontimeout = function () {\n         d.reject({code: 501, text: \"request timeout\"});\n      }\n   }\n\n   if (data) {\n      req.send(data);\n   } else {\n      req.send();\n   }\n\n   if (d.promise.then) {\n      // whenjs has the actual user promise in an attribute\n      return d.promise;\n   } else {\n      return d;\n   }\n};\n\n// Helper to do HTTP/GET requests returning JSON parsed result as a promise.\nvar http_get_json = function (url, timeout) {\n\n   var d = when.defer();\n   var req = new XMLHttpRequest();\n   req.withCredentials = true; // pass along cookies\n   req.onreadystatechange = function () {\n\n      if (req.readyState === 4) {\n\n         // Normalize IE's response to HTTP 204 when Win error 1223.\n         // http://stackoverflow.com/a/10047236/884770\n         //\n         var status = (req.status === 1223) ? 204 : req.status;\n\n         if (status === 200) {\n\n            // parse response\n            var data = JSON.parse(req.responseText);\n\n            // response with content\n            //\n            d.resolve(data);\n\n         } if (status === 204) {\n\n            // empty response\n            //\n            d.resolve();\n\n         } else {\n\n            // anything else is a fail\n            //\n            var statusText = null;\n            try {\n               statusText = req.statusText;\n            } catch (e) {\n               // IE8 fucks up on this\n            }\n            d.reject({code: status, text: statusText});\n         }\n      }\n   }\n\n   req.open(\"GET\", url, true);\n   req.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n\n   if (timeout > 0) {\n      req.timeout = timeout; // request timeout in ms\n\n      req.ontimeout = function () {\n         d.reject({code: 501, text: \"request timeout\"});\n      }\n   }\n\n   req.send();\n\n   if (d.promise.then) {\n      // whenjs has the actual user promise in an attribute\n      return d.promise;\n   } else {\n      return d;\n   }\n};\n\n/**\n * Merge a list of objects from left to right\n *\n * For each object passed to the function, add to the previous object the keys\n *     that are present in the former but not the latter. If the last argument\n *     is a boolean, it sets whether or not to recursively merge objects.\n *\n * This function mutates the first passed object. To avopid this, you can pass\n *     a new empty object as the first arg:\n *\n *     defaults({}, obj1, obj2, ...)\n *\n * @example\n *     defaults({ a: 1 }, { a: 2, b: 2 }, { b: 3, c: 3 })\n *     // { a: 1, b: 2, c: 3 }\n *\n *     defaults({ a: { k1: 1 } }, { a: { k2: 2 } })\n *     // { a: { k1: 1 } }\n *\n *     defaults({ a: { k1: 1 } }, { a: { k2: 2 } })\n *     // { a: { k1: 1 } }\n *\n * @param {Object} base The object to merge defaults to\n * @param {Object} source[, ...] The default values source\n * @param {Boolean} [recursive] Whether to recurse fro object values*\n *     (default: false)\n * @returns {Object} The mutated `base` object\n */\nvar defaults = function () {\n   // Return an empty object if no arguments are passed\n   if (arguments.length === 0) return {};\n\n   var base = arguments[0];\n   var recursive = false;\n   var len = arguments.length;\n\n   // Check for recursive mode param\n   if (typeof arguments[len - 1] === 'boolean') {\n      recursive = arguments[len - 1];\n      len -= 1; // Ignore the last arg\n   }\n\n   // Merging function used by Array#forEach()\n   var do_merge = function (key) {\n      var val = obj[key];\n\n      // Set if unset\n      if (!(key in base)) {\n         base[key] = val;\n      // If the value is an object and we use recursive mode, use defaults on\n      // the value\n      } else if (recursive && typeof val === 'object' &&\n                 typeof base[key] === 'object') {\n         defaults(base[key], val);\n      }\n      // Otherwise ignore the value\n   };\n\n   // Iterate over source objects\n   for (var i=1; i < len; i++) {\n      var obj = arguments[i];\n\n      // Ignore falsy values\n      if (!obj) continue;\n\n      // Require object\n      if (typeof obj !== 'object') {\n         throw new Error('Expected argument at index ' + i +\n                         ' to be an object');\n      }\n\n      // Merge keys\n      Object.keys(obj).forEach(do_merge);\n   }\n\n   // Return the mutated base object\n   return base;\n};\n\n/**\n * If an error handler function is given, it is called with the error instance, otherwise log the error to the console\n * with a possible custom error message prefix. The custom message is passed also the error handler.\n *\n * @param {function} handler - The error handler function.\n * @param {object | Error} error - The error instance.\n * @param {string} [error_message] - The custom error message, optional.\n */\nvar handle_error = function(handler, error, error_message) {\n    if(typeof handler === 'function') {\n        handler(error, error_message);\n    } else {\n        console.error(error_message || 'Unhandled exception raised: ', error);\n    }\n};\n\n/**\n * Generate a new ID to identify a WAMP global scope entity, such as a session or a publication.\n * Represented as a JavaScript Number (double float), so ensure that an appropriate serialization\n * for an integer is used for use in transported WAMP protocol messages.\n */\nvar new_global_id = function() {\n    return Math.floor(Math.random() * 9007199254740992) + 1;\n};\n\nvar deferred_factory = function(options) {\n   var defer = null;\n\n   if (options && options.use_es6_promises) {\n\n      if ('Promise' in global) {\n         // ES6-based deferred factory\n         //\n         defer = function () {\n            var deferred = {};\n\n            deferred.promise = new Promise(function (resolve, reject) {\n               deferred.resolve = resolve;\n               deferred.reject = reject;\n            });\n\n            return deferred;\n         };\n      } else {\n\n         log.debug(\"Warning: ES6 promises requested, but not found! Falling back to whenjs.\");\n\n         // whenjs-based deferred factory\n         //\n         defer = when.defer;\n      }\n\n   } else if (options && options.use_deferred) {\n\n      // use explicit deferred factory, e.g. jQuery.Deferred or Q.defer\n      //\n      defer = options.use_deferred;\n\n   } else {\n\n      // whenjs-based deferred factory\n      //\n      defer = when.defer;\n   }\n\n   return defer;\n};\n\nvar promise = function(d) {\n   if (d.promise.then) {\n      // whenjs has the actual user promise in an attribute\n      return d.promise;\n   } else {\n      return d;\n   }\n};\n\nlet sleep = async function sleep (ms) {\n   return new Promise(resolve => setTimeout(resolve, ms));\n};\n\nlet _read_file = async function read_file (path) {\n   let fs = require(\"fs\");\n   return new Promise((resolve, reject) => {\n      fs.readFile(path, function (err, data) {\n         if (err) {\n            reject(err);\n         } else {\n            resolve(data);\n         }\n      });\n   });\n};\n\nif ('fs' in global) {\n   exports.read_file = _read_file;\n} else {\n   exports.read_file = null;\n}\n\n\nexports.handle_error = handle_error;\nexports.rand_normal = rand_normal;\nexports.is_object = is_object;\nexports.assert = assert;\nexports.http_post = http_post;\nexports.http_get_json = http_get_json;\nexports.defaults = defaults;\nexports.new_global_id = new_global_id;\nexports.deferred_factory = deferred_factory;\nexports.promise = promise;\nexports.sleep = sleep;\n"]},"metadata":{},"sourceType":"script"}