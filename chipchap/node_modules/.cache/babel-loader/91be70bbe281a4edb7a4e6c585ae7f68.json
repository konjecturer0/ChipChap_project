{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/** @author Brian Cavalier */\n\n/** @author John Hann */\n(function (define) {\n  'use strict';\n\n  define(function () {\n    return function progress(Promise) {\n      /**\n       * @deprecated\n       * Register a progress handler for this promise\n       * @param {function} onProgress\n       * @returns {Promise}\n       */\n      Promise.prototype.progress = function (onProgress) {\n        return this.then(void 0, void 0, onProgress);\n      };\n\n      return Promise;\n    };\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory();\n});","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChipChapProject/chipchap/node_modules/when/lib/decorators/progress.js"],"names":["define","progress","Promise","prototype","onProgress","then","amd","factory","module","exports"],"mappings":"AAAA;;AACA;;AACA;AAEC,WAASA,MAAT,EAAiB;AAAE;;AACpBA,EAAAA,MAAM,CAAC,YAAW;AAEjB,WAAO,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAEjC;;;;;;AAMAA,MAAAA,OAAO,CAACC,SAAR,CAAkBF,QAAlB,GAA6B,UAASG,UAAT,EAAqB;AACjD,eAAO,KAAKC,IAAL,CAAU,KAAK,CAAf,EAAkB,KAAK,CAAvB,EAA0BD,UAA1B,CAAP;AACA,OAFD;;AAIA,aAAOF,OAAP;AACA,KAbD;AAeA,GAjBK,CAAN;AAkBC,CAnBA,EAmBC,OAAOF,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACM,GAAvC,GAA6CN,MAA7C,GAAsD,UAASO,OAAT,EAAkB;AAAEC,EAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,EAAxB;AAA6B,CAnBxG,CAAD","sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function progress(Promise) {\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Register a progress handler for this promise\n\t\t * @param {function} onProgress\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.progress = function(onProgress) {\n\t\t\treturn this.then(void 0, void 0, onProgress);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n"]},"metadata":{},"sourceType":"script"}