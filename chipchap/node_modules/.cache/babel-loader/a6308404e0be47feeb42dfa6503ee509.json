{"ast":null,"code":"var _jsxFileName = \"/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/src/components/App.js\";\nimport React from 'react'; // MicroComponents\n\nimport NewChat from '../components/buttons/NewChat';\nimport ChatHead from '../components/ChatsHead'; // Components\n\nimport Contacts from '../components/Contacts';\nimport Chat from '../components/MainChat/Chat'; // Styles\n\nimport Container from '../styles/App/container.tw'; // Autobahn\n\nimport autobahn from 'autobahn';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userid: null,\n      userSelect: '',\n      users: [{\n        id: '01',\n        name: 'Anonymous Test',\n        last_seen: '1 min ago'\n      }],\n      messageStore: [],\n      filterChat: ''\n    };\n\n    this.toggleChat = user => {\n      this.setState({\n        userSelect: user.id\n      });\n\n      const removeUser = id => {\n        const messageStorage = this.state.messageStore;\n        let newMessageStorage = [];\n\n        for (let i = 0; i < messageStorage.length; i++) {\n          if (!messageStorage[i][user.id]) {\n            newMessageStorage.push(messageStorage[i]);\n          }\n        }\n\n        return newMessageStorage;\n      };\n\n      const msgStorage = removeUser(user.id);\n      this.setState({\n        messageStore: msgStorage\n      });\n    };\n\n    this.trackMessageNotify = ([message, userid]) => {\n      if (this.state.userSelect !== String(userid[0])) {\n        let userStore = [];\n\n        for (let i = 0; i < this.state.messageStore.length; i++) {\n          if (Object.keys(this.state.messageStore[i])[0] === userid[0]) {\n            userStore = this.state.messageStore[i];\n          }\n        }\n\n        console.log(\"message from tracknotify\");\n        console.log(message[0]);\n        userStore = [...userStore, message[0]];\n        this.setState({\n          messageStore: [...this.state.messageStore, userStore]\n        });\n      }\n    };\n\n    this.selectUserChat = users => {\n      for (let i = 0; i < users.length; i++) {\n        if (users[i].id === this.state.userSelect) {\n          return users[i];\n        }\n      }\n    };\n\n    this.onSearch = e => {\n      let value = e.target.value;\n      this.setState({\n        filterChat: value\n      });\n    };\n\n    this.sess = null;\n  }\n\n  componentDidMount() {\n    let connection = new autobahn.Connection({\n      transports: [{\n        type: \"websocket\",\n        url: 'ws://192.168.2.115:8080'\n      }],\n      realm: 'chat'\n    });\n\n    connection.onopen = (session, details) => {\n      console.log(\"!! Got a connection\");\n      console.log(session);\n      console.log(details);\n      this.sess = session;\n      session.call('com.chipchap.session.user.actions:contacts').then(result => {\n        // console.log(result[0]);\n        this.setState({\n          users: [...this.state.users, ...result]\n        });\n      }, error => {\n        console.log(\"!!ERROR\");\n        console.log(error);\n      });\n      session.call('com.chipchap.session.user.actions:getmyID').then(result => {\n        this.setState({\n          userid: result\n        });\n        console.log(`GOT ID:${result}`);\n        session.subscribe(`com.chipchap.session.user.actions:listen:${result}`, this.trackMessageNotify).then(subscription => {\n          console.log(\"subscription to <<listen>> succeded\");\n        }, error => {\n          console.log(\"received error with subscription to <<listen>>\");\n          console.log(error);\n        });\n      }, error => {\n        console.log(\"GOT AN ERROR! WHILE CALLING: GETMYID\");\n        console.log(error);\n      });\n    };\n\n    connection.onclose = function (session, details) {\n      console.log(session, details);\n    };\n\n    connection.open();\n  }\n\n  selectMessageStore() {\n    const user = this.selectUserChat(this.state.users);\n    const messageStorage = this.state.messageStore;\n\n    for (let i = 0; i < messageStorage.length; i++) {\n      if (Object.keys(messageStorage)[i] === user.id) {\n        return messageStorage[i];\n      }\n    }\n\n    return [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderColor: '#E6E5EA'\n      },\n      className: \"w-2/6 inline-flex flex-col align-top border-r h-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-6 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NewChat, {\n      onClick: e => alert('For demonstration purposes, you can chat though'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ChatHead, {\n      onSearch: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-2 overflow-y-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Contacts, {\n      filter: this.state.filterChat,\n      users: this.state.users,\n      onToggleChat: this.toggleChat,\n      user: this.state.userSelect,\n      trackNotify: this.state.messageStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-4/6 inline-flex flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, this.state.userSelect ? /*#__PURE__*/React.createElement(Chat, {\n      userid: this.state.userid,\n      user: this.selectUserChat(this.state.users),\n      session: this.sess,\n      messageNotify: this.selectMessageStore(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-full justify-center items-center flex py-64\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: '#BFBEC5'\n      },\n      className: \"cursor-default font-semibold text-4xl tracking-tight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"Open a Chat\"), /*#__PURE__*/React.createElement(\"svg\", {\n      style: {\n        color: '#BFBEC5'\n      },\n      className: \"h-24 w-24 fill-current\",\n      version: \"1.1\",\n      viewBox: \"0 0 32 32\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      id: \"Layer_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 171\n      }\n    }), /*#__PURE__*/React.createElement(\"g\", {\n      id: \"chat_x5F_alt_x5F_stroke\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 188\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 220\n      }\n    }, /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 223\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M25.977,12.213c-0.027,1.387-0.336,2.695-0.883,3.889C27.977,16.582,28,18.93,28,20     c0,0.992,0,4-3.996,4H20c-2.605,0-4.938,1.258-6.398,3.203C12.633,26.469,12,25.305,12,24v-4c0-0.791,0.141-1.414,0.359-1.928     C12.242,18.051,12.125,18,12,18H8.203c-0.129,0.619-0.199,1.281-0.199,2v4c0,4.418,3.578,8,7.996,8c0-2.211,1.789-4,4-4h4.004     C28,28,32,25.75,32,20C32,15.107,29.219,12.84,25.977,12.213z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 226\n      }\n    })), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M16,4c1.492,0,4,0.52,4,4v4c0,1.309-0.633,2.471-1.602,3.201C16.938,13.26,14.609,12,12,12H8.004    C4,12,4,8.99,4,8c0-1.195,0-4,4.004-4H16 M16,0H8.004C4,0,0,2.125,0,8c0,5.75,4,8,8.004,8H12c2.211,0,4,1.793,4,4    c4.418,0,8.004-3.582,8.004-8V8C24.004,2.479,20,0,16,0L16,0z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 638\n      }\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/src/components/App.js"],"names":["React","NewChat","ChatHead","Contacts","Chat","Container","autobahn","App","Component","constructor","props","state","userid","userSelect","users","id","name","last_seen","messageStore","filterChat","toggleChat","user","setState","removeUser","messageStorage","newMessageStorage","i","length","push","msgStorage","trackMessageNotify","message","String","userStore","Object","keys","console","log","selectUserChat","onSearch","e","value","target","sess","componentDidMount","connection","Connection","transports","type","url","realm","onopen","session","details","call","then","result","error","subscribe","subscription","onclose","open","selectMessageStore","render","borderColor","alert","color"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// MicroComponents\nimport NewChat from '../components/buttons/NewChat';\nimport ChatHead from '../components/ChatsHead';\n\n// Components\nimport Contacts from '../components/Contacts';\nimport Chat from '../components/MainChat/Chat';\n\n// Styles\nimport Container from '../styles/App/container.tw';\n\n// Autobahn\nimport autobahn from 'autobahn';\n\nclass App extends React.Component {\n    \n\n    constructor(props) {\n        super(props);\n        this.sess = null;\n    }\n\n    state = {\n        userid: null,\n        userSelect: '',\n        users: [\n            {\n                id: '01',\n                name: 'Anonymous Test',\n                last_seen: '1 min ago'\n            }\n        ],\n        messageStore: [],\n        filterChat: '',\n    };\n\n    componentDidMount() {\n        let connection = new autobahn.Connection({transports:[{type:\"websocket\", url: 'ws://192.168.2.115:8080'}], realm: 'chat'});\n        connection.onopen = (session, details) => {\n            console.log(\"!! Got a connection\");\n            console.log(session);\n            console.log(details);\n            this.sess = session;\n            session.call('com.chipchap.session.user.actions:contacts').then(\n                (result) => {\n                    // console.log(result[0]);\n                    this.setState({users: [ ...this.state.users, ...result]});\n                },\n                (error) => {\n                    console.log(\"!!ERROR\");\n                    console.log(error);\n                }\n            );\n            session.call('com.chipchap.session.user.actions:getmyID').then(\n                (result) => {\n                    this.setState({userid: result});\n                    console.log(`GOT ID:${result}`);\n                    session.subscribe(`com.chipchap.session.user.actions:listen:${result}`, this.trackMessageNotify).then(\n                        (subscription) => {\n                            console.log(\"subscription to <<listen>> succeded\");\n                        },\n                        (error) => {\n                            console.log(\"received error with subscription to <<listen>>\")\n                            console.log(error);\n                        }\n                    );\n                },\n                (error) => {\n                    console.log(\"GOT AN ERROR! WHILE CALLING: GETMYID\");\n                    console.log(error);\n                }\n            );\n        }\n        connection.onclose = function(session, details) {\n            console.log(session, details);\n        }\n        connection.open();\n    }\n\n    toggleChat = (user) => {\n        this.setState({userSelect: user.id});\n        const removeUser = (id) => {\n            const messageStorage = this.state.messageStore;\n            let newMessageStorage = [];\n            for (let i=0; i < messageStorage.length; i++) {\n                if (!messageStorage[i][user.id]) {\n                    newMessageStorage.push(messageStorage[i]);\n                }\n            }\n            return newMessageStorage;\n        }\n        const msgStorage = removeUser(user.id);\n        this.setState({messageStore: msgStorage});\n    }\n\n    trackMessageNotify = ([message, userid]) => {\n        if (this.state.userSelect !== String(userid[0])) {\n            let userStore = []\n            for (let i=0; i<this.state.messageStore.length;i++) {\n                if (Object.keys(this.state.messageStore[i])[0] === userid[0]) {\n                    userStore = this.state.messageStore[i];\n                } \n            }\n            console.log(\"message from tracknotify\");\n            console.log(message[0]);\n            userStore = [...userStore, message[0]]\n            this.setState({messageStore: [...this.state.messageStore, userStore]});\n        }\n    }\n\n    selectUserChat = (users) => {\n        for (let i=0; i < users.length; i++) {\n            if (users[i].id === this.state.userSelect) {\n                return users[i];\n            }\n        }\n    }\n\n    selectMessageStore() {\n        const user = this.selectUserChat(this.state.users);\n        const messageStorage = this.state.messageStore;\n        for (let i=0; i < messageStorage.length; i++) {\n            if (Object.keys(messageStorage)[i] === user.id) {\n                return messageStorage[i];\n            }\n        }\n        return [];\n    }\n\n    onSearch = (e) => {\n        let value = e.target.value;\n        this.setState({filterChat: value});\n    }\n\n    render() {\n        return (\n            <Container>\n                <div style={{borderColor: '#E6E5EA'}} className=\"w-2/6 inline-flex flex-col align-top border-r h-screen\">\n                    {/******** BUTTON NEW CONVERSATION *****/}\n                    <div className=\"py-6 text-center\">\n                        <NewChat onClick={(e) => alert('For demonstration purposes, you can chat though')} />\n                    </div>\n                    {/******** CHATS & SEARCH *****/}\n                    <div className=\"py-2\">\n                        <ChatHead onSearch={this.onSearch} />\n                    </div>\n                    {/******** CONTACTS SECTION *****/}\n                    <div className=\"py-2 overflow-y-scroll\">\n                        <Contacts filter={this.state.filterChat} users={this.state.users} onToggleChat={this.toggleChat} user={this.state.userSelect} trackNotify={this.state.messageStore} />\n                    </div>\n                </div>\n                <div className=\"w-4/6 inline-flex flex-col\">\n                    {/*****  CHAT  *****/}\n                    {\n                        this.state.userSelect ? (\n                            <Chat userid={this.state.userid} user={this.selectUserChat(this.state.users)} session={this.sess} messageNotify={this.selectMessageStore()} />\n                        ) : (\n                            <div className=\"w-full justify-center items-center flex py-64\">\n                                <h3 style={{color: '#BFBEC5'}} className=\"cursor-default font-semibold text-4xl tracking-tight\">Open a Chat</h3>\n                                <svg style={{color: '#BFBEC5'}} className=\"h-24 w-24 fill-current\" version=\"1.1\" viewBox=\"0 0 32 32\"  xmlns=\"http://www.w3.org/2000/svg\" ><g id=\"Layer_1\"/><g id=\"chat_x5F_alt_x5F_stroke\"><g><g><path d=\"M25.977,12.213c-0.027,1.387-0.336,2.695-0.883,3.889C27.977,16.582,28,18.93,28,20     c0,0.992,0,4-3.996,4H20c-2.605,0-4.938,1.258-6.398,3.203C12.633,26.469,12,25.305,12,24v-4c0-0.791,0.141-1.414,0.359-1.928     C12.242,18.051,12.125,18,12,18H8.203c-0.129,0.619-0.199,1.281-0.199,2v4c0,4.418,3.578,8,7.996,8c0-2.211,1.789-4,4-4h4.004     C28,28,32,25.75,32,20C32,15.107,29.219,12.84,25.977,12.213z\"/></g><path d=\"M16,4c1.492,0,4,0.52,4,4v4c0,1.309-0.633,2.471-1.602,3.201C16.938,13.26,14.609,12,12,12H8.004    C4,12,4,8.99,4,8c0-1.195,0-4,4.004-4H16 M16,0H8.004C4,0,0,2.125,0,8c0,5.75,4,8,8.004,8H12c2.211,0,4,1.793,4,4    c4.418,0,8.004-3.582,8.004-8V8C24.004,2.479,20,0,16,0L16,0z\" /></g></g></svg>\n                            </div>\n                        )\n                    }\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}