{"ast":null,"code":"var _jsxFileName = \"/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/src/components/App.js\";\nimport React from 'react'; // MicroComponents\n\nimport NewChat from '../components/buttons/NewChat';\nimport ChatHead from '../components/ChatsHead'; // Components\n\nimport Contacts from '../components/Contacts';\nimport Chat from '../components/MainChat/Chat'; // Styles\n\nimport Container from '../styles/App/container.tw'; // Autobahn\n\nimport autobahn from 'autobahn';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userSelect: '',\n      users: [],\n      filterChat: ''\n    };\n\n    this.componentDidMount = () => {\n      let connection = new autobahn.Connection({\n        transports: [{\n          type: \"websocket\",\n          url: 'ws://192.168.2.115:8080'\n        }],\n        realm: 'chat'\n      });\n\n      connection.onopen = function (session, details) {\n        console.log(\"!! Got a connection\");\n        console.log(session);\n        console.log(details);\n        this.sess = session;\n        const gotContacts = this.sess.call('com.chipchap.session.user.actions:contacts').then(function (result) {\n          // console.log(result[0]);\n          return Promise.resolve(result);\n        }, function (error) {\n          console.log(\"!!ERROR: \" + error);\n        });\n        console.log(gotContacts);\n        this.setState({\n          users: [...gotContacts]\n        });\n      };\n\n      connection.onclose = function (session, details) {\n        console.log(session, details);\n      };\n\n      connection.open();\n    };\n\n    this.toggleChat = user => {\n      this.setState({\n        userSelect: user.id\n      });\n    };\n\n    this.selectUserChat = users => {\n      for (let i = 0; i < users.length; i++) {\n        if (users[i].id === this.state.userSelect) {\n          return users[i];\n        }\n      }\n    };\n\n    this.onSearch = e => {\n      let value = e.target.value;\n      this.setState({\n        filterChat: value\n      });\n    };\n\n    this.sess = null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderColor: '#E6E5EA'\n      },\n      className: \"w-2/6 inline-flex flex-col align-top border-r h-screen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-6 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NewChat, {\n      onClick: e => alert('For demonstration purposes, you can chat though'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ChatHead, {\n      onSearch: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-2 overflow-y-scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Contacts, {\n      filter: this.state.filterChat,\n      users: this.state.users,\n      onToggleChat: this.toggleChat,\n      user: this.state.userSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-4/6 inline-flex flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Chat, {\n      user: this.selectUserChat(this.state.users),\n      session: this.session,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChiChapProject/chipchap/src/components/App.js"],"names":["React","NewChat","ChatHead","Contacts","Chat","Container","autobahn","App","Component","constructor","props","state","userSelect","users","filterChat","componentDidMount","connection","Connection","transports","type","url","realm","onopen","session","details","console","log","sess","gotContacts","call","then","result","Promise","resolve","error","setState","onclose","open","toggleChat","user","id","selectUserChat","i","length","onSearch","e","value","target","render","borderColor","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,6BAAjB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAQ9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SANnBC,KAMmB,GANX;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,UAAU,EAAE;AAHR,KAMW;;AAAA,SAKnBC,iBALmB,GAKC,MAAM;AACtB,UAAIC,UAAU,GAAG,IAAIV,QAAQ,CAACW,UAAb,CAAwB;AAACC,QAAAA,UAAU,EAAC,CAAC;AAACC,UAAAA,IAAI,EAAC,WAAN;AAAmBC,UAAAA,GAAG,EAAE;AAAxB,SAAD,CAAZ;AAAkEC,QAAAA,KAAK,EAAE;AAAzE,OAAxB,CAAjB;;AACAL,MAAAA,UAAU,CAACM,MAAX,GAAoB,UAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAC3CC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,aAAKG,IAAL,GAAYJ,OAAZ;AACA,cAAMK,WAAW,GAAG,KAAKD,IAAL,CAAUE,IAAV,CAAe,4CAAf,EAA6DC,IAA7D,CAChB,UAASC,MAAT,EAAiB;AACb;AACA,iBAAOC,OAAO,CAACC,OAAR,CAAgBF,MAAhB,CAAP;AACH,SAJe,EAKhB,UAASG,KAAT,EAAgB;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAYQ,KAAxB;AACH,SAPe,CAApB;AASAT,QAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACA,aAAKO,QAAL,CAAc;AAACtB,UAAAA,KAAK,EAAE,CAAE,GAAGe,WAAL;AAAR,SAAd;AACH,OAhBD;;AAiBAZ,MAAAA,UAAU,CAACoB,OAAX,GAAqB,UAASb,OAAT,EAAkBC,OAAlB,EAA2B;AAC5CC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqBC,OAArB;AACH,OAFD;;AAGAR,MAAAA,UAAU,CAACqB,IAAX;AACH,KA5BkB;;AAAA,SA8BnBC,UA9BmB,GA8BLC,IAAD,IAAU;AACnB,WAAKJ,QAAL,CAAc;AAACvB,QAAAA,UAAU,EAAE2B,IAAI,CAACC;AAAlB,OAAd;AACH,KAhCkB;;AAAA,SAkCnBC,cAlCmB,GAkCD5B,KAAD,IAAW;AACxB,WAAK,IAAI6B,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG7B,KAAK,CAAC8B,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAI7B,KAAK,CAAC6B,CAAD,CAAL,CAASF,EAAT,KAAgB,KAAK7B,KAAL,CAAWC,UAA/B,EAA2C;AACvC,iBAAOC,KAAK,CAAC6B,CAAD,CAAZ;AACH;AACJ;AACJ,KAxCkB;;AAAA,SA0CnBE,QA1CmB,GA0CPC,CAAD,IAAO;AACd,UAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,WAAKX,QAAL,CAAc;AAACrB,QAAAA,UAAU,EAAEgC;AAAb,OAAd;AACH,KA7CkB;;AAEf,SAAKnB,IAAL,GAAY,IAAZ;AACH;;AA4CDqB,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAZ;AAAsC,MAAA,SAAS,EAAC,wDAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAGJ,CAAD,IAAOK,KAAK,CAAC,iDAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKN,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,eAUI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWG,UAA7B;AAAyC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAA3D;AAAkE,MAAA,YAAY,EAAE,KAAKyB,UAArF;AAAiG,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWC,UAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,CADJ,eAeI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAK6B,cAAL,CAAoB,KAAK9B,KAAL,CAAWE,KAA/B,CAAZ;AAAmD,MAAA,OAAO,EAAE,KAAKU,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAfJ,CADJ;AAsBH;;AA9E6B;;AAiFlC,eAAehB,GAAf","sourcesContent":["import React from 'react';\n\n// MicroComponents\nimport NewChat from '../components/buttons/NewChat';\nimport ChatHead from '../components/ChatsHead';\n\n// Components\nimport Contacts from '../components/Contacts';\nimport Chat from '../components/MainChat/Chat';\n\n// Styles\nimport Container from '../styles/App/container.tw';\n\n// Autobahn\nimport autobahn from 'autobahn';\n\nclass App extends React.Component {\n    \n    state = {\n        userSelect: '',\n        users: [],\n        filterChat: '',\n    };\n\n    constructor(props) {\n        super(props);\n        this.sess = null;\n    }\n\n    componentDidMount = () => {\n        let connection = new autobahn.Connection({transports:[{type:\"websocket\", url: 'ws://192.168.2.115:8080'}], realm: 'chat'});\n        connection.onopen = function(session, details) {\n            console.log(\"!! Got a connection\");\n            console.log(session);\n            console.log(details);\n            this.sess = session;\n            const gotContacts = this.sess.call('com.chipchap.session.user.actions:contacts').then(\n                function(result) {\n                    // console.log(result[0]);\n                    return Promise.resolve(result);\n                },\n                function(error) {\n                    console.log(\"!!ERROR: \"+error);\n                }\n            )\n            console.log(gotContacts)\n            this.setState({users: [ ...gotContacts]});\n        }\n        connection.onclose = function(session, details) {\n            console.log(session, details);\n        }\n        connection.open();\n    }\n\n    toggleChat = (user) => {\n        this.setState({userSelect: user.id});\n    }\n\n    selectUserChat = (users) => {\n        for (let i=0; i < users.length; i++) {\n            if (users[i].id === this.state.userSelect) {\n                return users[i];\n            }\n        }\n    }\n\n    onSearch = (e) => {\n        let value = e.target.value;\n        this.setState({filterChat: value});\n    }\n\n    render() {\n        return (\n            <Container>\n                <div style={{borderColor: '#E6E5EA'}} className=\"w-2/6 inline-flex flex-col align-top border-r h-screen\">\n                    {/******** BUTTON NEW CONVERSATION *****/}\n                    <div className=\"py-6 text-center\">\n                        <NewChat onClick={(e) => alert('For demonstration purposes, you can chat though')} />\n                    </div>\n                    {/******** CHATS & SEARCH *****/}\n                    <div className=\"py-2\">\n                        <ChatHead onSearch={this.onSearch} />\n                    </div>\n                    {/******** CONTACTS SECTION *****/}\n                    <div className=\"py-2 overflow-y-scroll\">\n                        <Contacts filter={this.state.filterChat} users={this.state.users} onToggleChat={this.toggleChat} user={this.state.userSelect} />\n                    </div>\n                </div>\n                <div className=\"w-4/6 inline-flex flex-col\">\n                    {/*****  CHAT  *****/}\n                    <Chat user={this.selectUserChat(this.state.users)} session={this.session} />\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}