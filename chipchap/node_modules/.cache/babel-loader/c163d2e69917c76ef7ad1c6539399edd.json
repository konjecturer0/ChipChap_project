{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\nvar log = require('./log.js');\n\nfunction JSONSerializer(replacer, reviver) {\n  this.replacer = replacer;\n  this.reviver = reviver;\n  this.SERIALIZER_ID = 'json';\n  this.BINARY = false;\n}\n\nJSONSerializer.prototype.serialize = function (obj) {\n  try {\n    var payload = JSON.stringify(obj, this.replacer);\n    return payload;\n  } catch (e) {\n    log.warn('JSON encoding error', e);\n    throw e;\n  }\n};\n\nJSONSerializer.prototype.unserialize = function (payload) {\n  try {\n    var obj = JSON.parse(payload, this.reviver);\n    return obj;\n  } catch (e) {\n    log.warn('JSON decoding error', e);\n    throw e;\n  }\n};\n\nexports.JSONSerializer = JSONSerializer;\n\ntry {\n  // https://github.com/mcollina/msgpack5\n  var msgpack = require('msgpack5')({\n    forceFloat64: true\n  });\n\n  function MsgpackSerializer() {\n    this.SERIALIZER_ID = 'msgpack';\n    this.BINARY = true;\n  }\n\n  MsgpackSerializer.prototype.serialize = function (obj) {\n    try {\n      var payload = msgpack.encode(obj);\n      return payload;\n    } catch (e) {\n      log.warn('MessagePack encoding error', e);\n      throw e;\n    }\n  };\n\n  MsgpackSerializer.prototype.unserialize = function (payload) {\n    try {\n      var obj = msgpack.decode(payload);\n      return obj;\n    } catch (e) {\n      log.warn('MessagePack decoding error', e);\n      throw e;\n    }\n  };\n\n  exports.MsgpackSerializer = MsgpackSerializer;\n} catch (e) {\n  log.warn('msgpack serializer not available', e);\n}\n\ntry {\n  // http://hildjj.github.io/node-cbor/\n  var cbor = require('cbor');\n\n  function CBORSerializer() {\n    this.SERIALIZER_ID = 'cbor';\n    this.BINARY = true;\n  }\n\n  CBORSerializer.prototype.serialize = function (obj) {\n    try {\n      var payload = cbor.encode(obj);\n      return payload;\n    } catch (e) {\n      log.warn('CBOR encoding error', e);\n      throw e;\n    }\n  };\n\n  CBORSerializer.prototype.unserialize = function (payload) {\n    try {\n      //var obj = cbor.decodeAllSync(payload)[0];\n      var obj = cbor.decodeFirstSync(payload);\n      return obj;\n    } catch (e) {\n      log.warn('CBOR decoding error', e);\n      throw e;\n    }\n  };\n\n  exports.CBORSerializer = CBORSerializer;\n} catch (e) {\n  log.warn('cbor serializer not available', e);\n}","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChipChapProject/chipchap/node_modules/autobahn/lib/serializer.js"],"names":["log","require","JSONSerializer","replacer","reviver","SERIALIZER_ID","BINARY","prototype","serialize","obj","payload","JSON","stringify","e","warn","unserialize","parse","exports","msgpack","forceFloat64","MsgpackSerializer","encode","decode","cbor","CBORSerializer","decodeFirstSync"],"mappings":"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","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\n\nvar log = require('./log.js');\n\n\nfunction JSONSerializer(replacer, reviver) {\n   this.replacer = replacer;\n   this.reviver = reviver;\n   this.SERIALIZER_ID = 'json';\n   this.BINARY = false;\n}\n\nJSONSerializer.prototype.serialize = function (obj) {\n   try {\n      var payload = JSON.stringify(obj, this.replacer);\n      return payload;\n   } catch (e) {\n      log.warn('JSON encoding error', e);\n      throw e;\n   }\n};\n\nJSONSerializer.prototype.unserialize = function (payload) {\n   try {\n      var obj = JSON.parse(payload, this.reviver);\n      return obj;\n   } catch (e) {\n      log.warn('JSON decoding error', e);\n      throw e;\n   }\n};\n\nexports.JSONSerializer = JSONSerializer;\n\n\ntry {\n   // https://github.com/mcollina/msgpack5\n   var msgpack = require('msgpack5')({forceFloat64: true});\n\n   function MsgpackSerializer() {\n      this.SERIALIZER_ID = 'msgpack';\n      this.BINARY = true;\n   }\n\n   MsgpackSerializer.prototype.serialize = function (obj) {\n      try {\n         var payload = msgpack.encode(obj);\n         return payload;\n      } catch (e) {\n         log.warn('MessagePack encoding error', e);\n         throw e;\n      }\n   };\n\n   MsgpackSerializer.prototype.unserialize = function (payload) {\n      try {\n         var obj = msgpack.decode(payload);\n         return obj;\n      } catch (e) {\n         log.warn('MessagePack decoding error', e);\n         throw e;\n      }\n   };\n\n   exports.MsgpackSerializer = MsgpackSerializer;\n} catch (e) {\n   log.warn('msgpack serializer not available', e);\n}\n\n\ntry {\n   // http://hildjj.github.io/node-cbor/\n   var cbor = require('cbor');\n\n   function CBORSerializer() {\n      this.SERIALIZER_ID = 'cbor';\n      this.BINARY = true;\n   }\n\n   CBORSerializer.prototype.serialize = function (obj) {\n      try {\n         var payload = cbor.encode(obj);\n         return payload;\n      } catch (e) {\n         log.warn('CBOR encoding error', e);\n         throw e;\n      }\n   };\n\n   CBORSerializer.prototype.unserialize = function (payload) {\n      try {\n         //var obj = cbor.decodeAllSync(payload)[0];\n         var obj = cbor.decodeFirstSync(payload);\n         return obj;\n      } catch (e) {\n         log.warn('CBOR decoding error', e);\n         throw e;\n      }\n   };\n\n   exports.CBORSerializer = CBORSerializer;\n} catch (e) {\n   log.warn('cbor serializer not available', e);\n}\n"]},"metadata":{},"sourceType":"script"}