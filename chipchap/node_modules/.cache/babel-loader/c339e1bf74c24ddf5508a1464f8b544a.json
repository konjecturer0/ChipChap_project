{"ast":null,"code":"///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\n// require('assert') would be nice .. but it does not\n// work with Google Closure after Browserify\nvar crypto = require('crypto-js'); // PBKDF2-base key derivation function for salted WAMP-CRA\n//\n\n\nfunction derive_key(secret, salt, iterations, keylen) {\n  var iterations = iterations || 1000;\n  var keylen = keylen || 32;\n  var config = {\n    keySize: keylen / 4,\n    iterations: iterations,\n    hasher: crypto.algo.SHA256\n  };\n  var key = crypto.PBKDF2(secret, salt, config);\n  return key.toString(crypto.enc.Base64);\n}\n\nfunction sign(key, challenge) {\n  return crypto.HmacSHA256(challenge, key).toString(crypto.enc.Base64);\n}\n\nexports.sign = sign;\nexports.derive_key = derive_key;","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChipChapProject/chipchap/node_modules/autobahn/lib/auth/cra.js"],"names":["crypto","require","derive_key","secret","salt","iterations","keylen","config","keySize","hasher","algo","SHA256","key","PBKDF2","toString","enc","Base64","sign","challenge","HmacSHA256","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB,C,CAEA;AACA;;;AACA,SAASC,UAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,UAAnC,EAA+CC,MAA/C,EAAuD;AACpD,MAAID,UAAU,GAAGA,UAAU,IAAI,IAA/B;AACA,MAAIC,MAAM,GAAGA,MAAM,IAAI,EAAvB;AACA,MAAIC,MAAM,GAAG;AACVC,IAAAA,OAAO,EAAEF,MAAM,GAAG,CADR;AAEVD,IAAAA,UAAU,EAAEA,UAFF;AAGVI,IAAAA,MAAM,EAAET,MAAM,CAACU,IAAP,CAAYC;AAHV,GAAb;AAKA,MAAIC,GAAG,GAAGZ,MAAM,CAACa,MAAP,CAAcV,MAAd,EAAsBC,IAAtB,EAA4BG,MAA5B,CAAV;AACA,SAAOK,GAAG,CAACE,QAAJ,CAAad,MAAM,CAACe,GAAP,CAAWC,MAAxB,CAAP;AACF;;AAGD,SAASC,IAAT,CAAeL,GAAf,EAAoBM,SAApB,EAA+B;AAC5B,SAAOlB,MAAM,CAACmB,UAAP,CAAkBD,SAAlB,EAA6BN,GAA7B,EAAkCE,QAAlC,CAA2Cd,MAAM,CAACe,GAAP,CAAWC,MAAtD,CAAP;AACF;;AAEDI,OAAO,CAACH,IAAR,GAAeA,IAAf;AACAG,OAAO,CAAClB,UAAR,GAAqBA,UAArB","sourcesContent":["///////////////////////////////////////////////////////////////////////////////\n//\n//  AutobahnJS - http://autobahn.ws, http://wamp.ws\n//\n//  A JavaScript library for WAMP (\"The Web Application Messaging Protocol\").\n//\n//  Copyright (c) Crossbar.io Technologies GmbH and contributors\n//\n//  Licensed under the MIT License.\n//  http://www.opensource.org/licenses/mit-license.php\n//\n///////////////////////////////////////////////////////////////////////////////\n\n// require('assert') would be nice .. but it does not\n// work with Google Closure after Browserify\n\nvar crypto = require('crypto-js');\n\n// PBKDF2-base key derivation function for salted WAMP-CRA\n//\nfunction derive_key (secret, salt, iterations, keylen) {\n   var iterations = iterations || 1000;\n   var keylen = keylen || 32;\n   var config = {\n      keySize: keylen / 4,\n      iterations: iterations,\n      hasher: crypto.algo.SHA256\n   }\n   var key = crypto.PBKDF2(secret, salt, config);\n   return key.toString(crypto.enc.Base64);\n}\n\n\nfunction sign (key, challenge) {\n   return crypto.HmacSHA256(challenge, key).toString(crypto.enc.Base64);\n}\n\nexports.sign = sign;\nexports.derive_key = derive_key;\n"]},"metadata":{},"sourceType":"script"}