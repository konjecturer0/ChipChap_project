{"ast":null,"code":"/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/** @author Brian Cavalier */\n\n/** @author John Hann */\n\n/** @author Jeff Escalante */\n(function (define) {\n  'use strict';\n\n  define(function () {\n    return function fold(Promise) {\n      Promise.prototype.fold = function (f, z) {\n        var promise = this._beget();\n\n        this._handler.fold(function (z, x, to) {\n          Promise._handler(z).fold(function (x, z, to) {\n            to.resolve(f.call(this, z, x));\n          }, x, this, to);\n        }, z, promise._handler.receiver, promise._handler);\n\n        return promise;\n      };\n\n      return Promise;\n    };\n  });\n})(typeof define === 'function' && define.amd ? define : function (factory) {\n  module.exports = factory();\n});","map":{"version":3,"sources":["/home/vladic4t/Desktop/mydev/ChipChapProject/chipchap/node_modules/when/lib/decorators/fold.js"],"names":["define","fold","Promise","prototype","f","z","promise","_beget","_handler","x","to","resolve","call","receiver","amd","factory","module","exports"],"mappings":"AAAA;;AACA;;AACA;;AACA;AAEC,WAASA,MAAT,EAAiB;AAAE;;AACpBA,EAAAA,MAAM,CAAC,YAAW;AAEjB,WAAO,SAASC,IAAT,CAAcC,OAAd,EAAuB;AAE7BA,MAAAA,OAAO,CAACC,SAAR,CAAkBF,IAAlB,GAAyB,UAASG,CAAT,EAAYC,CAAZ,EAAe;AACvC,YAAIC,OAAO,GAAG,KAAKC,MAAL,EAAd;;AAEA,aAAKC,QAAL,CAAcP,IAAd,CAAmB,UAASI,CAAT,EAAYI,CAAZ,EAAeC,EAAf,EAAmB;AACrCR,UAAAA,OAAO,CAACM,QAAR,CAAiBH,CAAjB,EAAoBJ,IAApB,CAAyB,UAASQ,CAAT,EAAYJ,CAAZ,EAAeK,EAAf,EAAmB;AAC3CA,YAAAA,EAAE,CAACC,OAAH,CAAWP,CAAC,CAACQ,IAAF,CAAO,IAAP,EAAaP,CAAb,EAAgBI,CAAhB,CAAX;AACA,WAFD,EAEGA,CAFH,EAEM,IAFN,EAEYC,EAFZ;AAGA,SAJD,EAIGL,CAJH,EAIMC,OAAO,CAACE,QAAR,CAAiBK,QAJvB,EAIiCP,OAAO,CAACE,QAJzC;;AAMA,eAAOF,OAAP;AACA,OAVD;;AAYA,aAAOJ,OAAP;AACA,KAfD;AAiBA,GAnBK,CAAN;AAoBC,CArBA,EAqBC,OAAOF,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACc,GAAvC,GAA6Cd,MAA7C,GAAsD,UAASe,OAAT,EAAkB;AAAEC,EAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,EAAxB;AAA6B,CArBxG,CAAD","sourcesContent":["/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n/** @author Jeff Escalante */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function fold(Promise) {\n\n\t\tPromise.prototype.fold = function(f, z) {\n\t\t\tvar promise = this._beget();\n\n\t\t\tthis._handler.fold(function(z, x, to) {\n\t\t\t\tPromise._handler(z).fold(function(x, z, to) {\n\t\t\t\t\tto.resolve(f.call(this, z, x));\n\t\t\t\t}, x, this, to);\n\t\t\t}, z, promise._handler.receiver, promise._handler);\n\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n"]},"metadata":{},"sourceType":"script"}